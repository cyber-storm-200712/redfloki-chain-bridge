{"version":3,"sources":["../node_modules/express/lib sync","components/WalletConnect.js","components/ThemeButton.jsx","img/redfloki.svg","img/Telegram.svg","img/Twitter.svg","img/Instagram.svg","components/VideoView.jsx","components/NFTItem.jsx","components/actions/convert.js","img/Ethereum-Inventory.svg","components/BridgeDashboard.jsx","img/logo.svg","components/ContactUs.jsx","components/Footer.jsx","components/LandingPage.jsx","components/Navbar.jsx","getLibrary.js","components/Connectors.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","web3Modal","provider","providerOptions","Button","props","className","loading","disabled","onClick","name","getweb3","a","metamask","type","check","walletconnect","package","WalletConnectProvider","options","infuraId","network","qrcodeModalOptions","mobileLinks","Web3Modal","cacheProvider","connect","localStorage","setItem","Web3","eth","getAccounts","then","res","console","log","on","error","close","clear","web3","VideoView","autoPlay","loop","NFTItem","width","src","bounce","cssTransition","enter","exit","ethToBscRequest","account","uri","signature","hash","toast","transition","postdata","axios","post","dismiss","success","data","catch","err","response","step","message","delay","bscToEthRequest","EthNFTAddress","abi_config","eth_nft","BscNFTAddress","bsc_nft","BridgeDashboard","chainIdBuffer","storedAccount","getItem","useState","setAccount","processing","setProcessing","setCahinId","_nftItems","Array","nftItems","setNFTItems","openInventory","setOpenInventory","inventoryItems","setInventoryItems","selected","setSelected","selectedURI","setSelectedURI","inventoryOnceOpened","setInventoryOnceOpened","setProvider","givenProvider","ethContract","Contract","EthNFTAbi","bscContract","BscNFTAbi","isEth","isBsc","inventoryOpen","warning","itemBuffer","map","item","key","push","url","selectItem","from","document","getElementsByClassName","style","border","getElementById","backgroundColor","clearItem","i","indexOf","window","location","reload","getEthNFTs","methods","getTokenIdsByAddress","call","ids","split","shift","value","tokenURI","getBscFNTs","EthToBsc","getChainId","personal","sign","utils","sha3","BscToEth","useEffect","ethereum","accounts","networkId","alt","eth_inventory","ContactUs","logo","href","target","Footer","LandingPage","locate","assign","telegram","twitter","instagram","floki","Navbar","setWeb3","isWalletConnected","currentAccount","connectState","setConnecState","undefined","getLibrary","Web3Provider","InjectedConnector","Connectors","NetworkOnlyConnector","connectors","MetaMask","supportedNetworks","Infura","providerURL","App","libraryName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.056afd56.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1125;","import React, { setState, useState } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport Web3Modal from \"web3modal\";\r\nimport Authereum from \"authereum\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nvar web3Modal;\r\nvar provider;\r\nvar providerOptions;\r\nvar defaultAccount;\r\n\r\nconst getweb3 = async () => {\r\n    providerOptions = {\r\n        metamask: {\r\n            id: \"injected\",\r\n            name: \"MetaMask\",\r\n            type: \"injected\",\r\n            check: \"isMetaMask\",\r\n        },\r\n        walletconnect: {\r\n            package: WalletConnectProvider,\r\n            options: {\r\n                infuraId: \"INFURA_ID\",\r\n                network: \"mainnet\",\r\n                qrcodeModalOptions: {\r\n                    mobileLinks: [\r\n                        \"rainbow\",\r\n                        \"metamask\",\r\n                        \"argent\",\r\n                        \"trust\",\r\n                        \"imtoken\",\r\n                        \"pillar\",\r\n                    ],\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    web3Modal = new Web3Modal({\r\n        network: \"mainnet\",\r\n        cacheProvider: false,\r\n        providerOptions,\r\n    });\r\n\r\n    provider = await web3Modal.connect();\r\n\r\n    localStorage.setItem('isWalletConnected', true);\r\n\r\n    new Web3(provider).eth.getAccounts().then((res) => {\r\n        defaultAccount = res[0];\r\n        console.log(\"Got Account\" + res[0]);\r\n        localStorage.setItem('currentAccount', res[0]);\r\n    })\r\n\r\n    provider.on(\"error\", (e) => console.error(\"WS ERROR\", e));\r\n    provider.on(\"end\", (e) => console.error(\"WE END\", e));\r\n\r\n    provider.on(\"disconnect\", (e) => console.log(e));\r\n    provider.on(\"connect\", (e) => console.log(e));\r\n};\r\n\r\nexport const close = async () => {\r\n    provider = null;\r\n    localStorage.clear();\r\n}\r\n\r\nexport var web3 = new Web3(provider);\r\n\r\nexport var account = defaultAccount;\r\n\r\nexport default getweb3;","import React from \"react\";\r\nimport \"../styles/button.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <div className={`${props.className} flex`}>\r\n      {!props.loading ? (\r\n        <button className=\"btn\" onClick={props.onClick}>\r\n          {props.name}\r\n        </button>\r\n      ) : (\r\n        <button className=\"btn btn-disabled\" disabled>\r\n          <div className=\"_loader\">\r\n            <span className=\"let1\">c</span>\r\n            <span className=\"let2\">o</span>\r\n            <span className=\"let3\">n</span>\r\n            <span className=\"let4\">v</span>\r\n            <span className=\"let5\">e</span>\r\n            <span className=\"let6\">r</span>\r\n            <span className=\"let7\">t</span>\r\n            <span className=\"let8\">i</span>\r\n            <span className=\"let9\">n</span>\r\n            <span className=\"let10\">g</span>\r\n            <span className=\"let11\">.</span>\r\n            <span className=\"let12\">.</span>\r\n            <span className=\"let13\">.</span>\r\n          </div>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/redfloki.53659313.svg\";","export default __webpack_public_path__ + \"static/media/Telegram.b8b437ff.svg\";","export default __webpack_public_path__ + \"static/media/Twitter.36331815.svg\";","export default __webpack_public_path__ + \"static/media/Instagram.80807d62.svg\";","import React from \"react\";\r\n\r\nconst VideoView = (props) => {\r\n  return <video autoPlay loop type=\"video/mp4\" {...props}></video>;\r\n};\r\n\r\nexport default VideoView;\r\n","import React from \"react\";\r\nimport VideoView from \"./VideoView\";\r\nimport Button from \"./ThemeButton\";\r\n\r\nconst NFTItem = (props) => {\r\n  return (\r\n    <div id={`nft-item-${props.id}`} className={`nft-item ${props.className} flex col`} onClick={props.onClick}>\r\n      <div className=\"video-view flex\">\r\n        <VideoView className=\"video-preview flex\" width={props.width} src={props.src} />\r\n      </div>\r\n      {/* <Button className=\"select-button\" name={'SELECT THIS NFT'} onClick={props.onClick}/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NFTItem;\r\n","import axios from 'axios';\r\nimport \"animate.css/animate.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast, cssTransition } from \"react-toastify\";\r\n\r\nconst bounce = cssTransition({\r\n    enter: \"animate__animated animate__bounceIn\",\r\n    exit: \"animate__animated animate__bounceOut\"\r\n});\r\n\r\nexport const ethToBscRequest = async (account, id, uri, signature, hash) => {\r\n    toast.loading(\"Wait please.\\nServer is processing your request.\", {\r\n        transition: bounce\r\n    });\r\n    const postdata = {\r\n        account: account,\r\n        id: id,\r\n        uri: uri,\r\n        signature: signature,\r\n        hash: hash\r\n    };\r\n    await axios\r\n        .post(`/api/bridge/eth2bsc`, postdata)\r\n        .then(e => {\r\n            console.log(e);\r\n            toast.dismiss();\r\n            toast.success(e.data, {\r\n                transition: bounce\r\n            })\r\n        })\r\n        .catch(err => {\r\n            toast.dismiss()\r\n            var error = err.response.data;\r\n            if (error.step) {\r\n                toast.error(error.message, {\r\n                    transition: bounce,\r\n                    delay: 8\r\n                })\r\n                return;\r\n            }\r\n            toast.error(\"Server is not working. \\n Check your network connection.\", {\r\n                transition: bounce\r\n            })\r\n            console.log(err)\r\n        });\r\n}\r\n\r\nexport const bscToEthRequest = async (account, id, uri, signature, hash) => {\r\n    toast.loading(\"Wait please.\\nServer is processing your request.\", {\r\n        transition: bounce\r\n    });\r\n\r\n    const postdata = {\r\n        account: account,\r\n        id: id,\r\n        uri: uri,\r\n        signature: signature,\r\n        hash: hash\r\n    };\r\n\r\n    await axios\r\n        .post(`/api/bridge/bsc2eth`, postdata)\r\n        .then(e => {\r\n            console.log(e);\r\n            toast.dismiss();\r\n            toast.success(e.data, {\r\n                transition: bounce,\r\n                delay: 8\r\n            })\r\n        })\r\n        .catch(err => {\r\n            toast.dismiss()\r\n            var error = err.response.data;\r\n            if (error.step) {\r\n                toast.error(error.message, {\r\n                    transition: bounce\r\n                })\r\n                return;\r\n            }\r\n            toast.error(\"Server is not working. \\n Check your network connection.\", {\r\n                transition: bounce\r\n            })\r\n            console.log(err);\r\n        });\r\n}","export default __webpack_public_path__ + \"static/media/Ethereum-Inventory.1b02caca.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"./ThemeButton\";\r\nimport { web3, account } from \"./WalletConnect\";\r\nimport { Contract } from \"@ethersproject/contracts\";\r\nimport { ethers } from \"ethers\";\r\nimport { ToastContainer, toast, cssTransition } from \"react-toastify\";\r\nimport NFTItem from \"./NFTItem\";\r\nimport abi_config from \"./contract/config.json\";\r\nimport EthNFTAbi from \"./contract/EthNFT.json\";\r\nimport BscNFTAbi from \"./contract/EthNFT.json\";\r\nimport \"animate.css/animate.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { ethToBscRequest, bscToEthRequest } from \"./actions/convert\";\r\nimport { set } from \"express/lib/application\";\r\n\r\nimport eth_inventory from \"../img/Ethereum-Inventory.svg\";\r\n\r\nconst EthNFTAddress = abi_config.eth_nft;\r\nconst BscNFTAddress = abi_config.bsc_nft;\r\n\r\nconst BridgeDashboard = () => {\r\n  let chainIdBuffer = 0;\r\n\r\n  const connectState = localStorage.getItem(\"isWalletConnected\");\r\n  const storedAccount = localStorage.getItem(\"currentAccount\");\r\n  const [account, setAccount] = useState(storedAccount);\r\n  const [value, setValue] = useState(0);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [chainId, setCahinId] = useState(chainIdBuffer);\r\n  var _nftItems = new Array();\r\n  const [nftItems, setNFTItems] = useState(_nftItems);\r\n  const [openInventory, setOpenInventory] = useState(false);\r\n  const [inventoryItems, setInventoryItems] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [selectedURI, setSelectedURI] = useState(null);\r\n  const [inventoryOnceOpened, setInventoryOnceOpened] = useState(false);\r\n\r\n  web3.eth.setProvider(web3.givenProvider);\r\n  const ethContract = new web3.eth.Contract(EthNFTAbi, EthNFTAddress);\r\n  const bscContract = new web3.eth.Contract(BscNFTAbi, BscNFTAddress);\r\n\r\n  const bounce = cssTransition({\r\n    enter: \"animate__animated animate__bounceIn\",\r\n    exit: \"animate__animated animate__bounceOut\",\r\n  });\r\n\r\n  const isEth = (id) => {\r\n    if(!(id == 1 || id == 4))\r\n      return false;\r\n    else\r\n      return true\r\n  }\r\n\r\n  const isBsc = (id) => {\r\n    if(!(id == 56 || id == 97))\r\n      return false;\r\n    else\r\n      return true;\r\n  }\r\n\r\n  const inventoryOpen = () => {\r\n    if (\r\n      !localStorage.getItem(\"isWalletConnected\") ||\r\n      !localStorage.getItem(\"currentAccount\")\r\n    ) {\r\n      toast.warning(\"Please connect your wallet!\", {\r\n        transition: bounce,\r\n      });\r\n      return false;\r\n    }\r\n    if(!inventoryOnceOpened) {\r\n      setInventoryOnceOpened(true);\r\n      var itemBuffer = new Array();\r\n      nftItems.map((item, key) => {\r\n        console.log(key)\r\n        itemBuffer.push(<NFTItem key={key} id={item.id} src={item.url} className={item.id == selected ? 'selected-item' : ''} width=\"90%\" onClick={(e) => selectItem(item.id, item.url)}/>);\r\n      })\r\n      setInventoryItems(itemBuffer);\r\n    }\r\n    setOpenInventory(!openInventory);\r\n  }\r\n\r\n  const inventoryClose = () => {\r\n    setOpenInventory(!openInventory);\r\n  }\r\n\r\n  const selectItem = (id, uri) => {\r\n    const prevElements = Array.from(document.getElementsByClassName('nft-item'));\r\n    prevElements.map((item) => {\r\n      item.style.border = '#a09696';\r\n    })\r\n    setSelected(id);\r\n    setSelectedURI(uri);\r\n    document.getElementById(`nft-item-${id}`).style.backgroundColor = '#fa4444';\r\n  }\r\n\r\n  const clearItem = (id) => {\r\n    var i = _nftItems.indexOf(id);\r\n    delete _nftItems[i];\r\n    setInventoryOnceOpened(false);\r\n    setNFTItems(_nftItems);\r\n    inventoryOpen();\r\n    setSelected(null);\r\n    setSelectedURI(null);\r\n    window.location.reload();\r\n  }\r\n\r\n  const getEthNFTs = () => {\r\n    if (\r\n      !localStorage.getItem(\"isWalletConnected\") ||\r\n      !localStorage.getItem(\"currentAccount\")\r\n    ) {\r\n      toast.warning(\"Please connect your wallet!\", {\r\n        transition: bounce,\r\n      });\r\n      return false;\r\n    }\r\n    try {\r\n      ethContract.methods.getTokenIdsByAddress(account).call((err, data) => {\r\n        var ids = data.split(\",\");\r\n        ids.shift();\r\n        ids.map((value, key) => {\r\n          ethContract.methods.tokenURI(value).call((err, data) => {\r\n            console.log(data);\r\n            _nftItems.push({url: `https://gateway.pinata.cloud/ipfs/${data}`, id: value});\r\n            console.log(key, _nftItems);\r\n          });\r\n        });\r\n      });\r\n    } catch (e) {\r\n      toast.error(\"Network error!\", {\r\n        transition: bounce,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getBscFNTs = () => {\r\n    if (\r\n      !localStorage.getItem(\"isWalletConnected\") ||\r\n      !localStorage.getItem(\"currentAccount\")\r\n    ) {\r\n      toast.warning(\"Please connect your wallet!\", {\r\n        transition: bounce,\r\n      });\r\n      return false;\r\n    }\r\n    try {\r\n      bscContract.methods.getTokenIdsByAddress(account).call((err, data) => {\r\n        var ids = data.split(\",\");\r\n        ids.shift();\r\n        ids.map((value, key) => {\r\n          ethContract.methods.tokenURI(value).call((err, data) => {\r\n            console.log(data);\r\n            _nftItems.push({url: `https://gateway.pinata.cloud/ipfs/${data}`, id: value});\r\n            console.log(key, _nftItems);\r\n          });\r\n        });\r\n      });\r\n    } catch (e) {\r\n      toast.error(\"Network error!\", {\r\n        transition: bounce,\r\n      });\r\n    }\r\n  }\r\n\r\n  const EthToBsc = async () => {\r\n    if (\r\n      !localStorage.getItem(\"isWalletConnected\") ||\r\n      !localStorage.getItem(\"currentAccount\")\r\n    ) {\r\n      toast.warning(\"Please connect your wallet!\", {\r\n        transition: bounce,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    await web3.eth.getChainId().then(id => {\r\n      if(!isEth(id)){\r\n        toast.warning(\"Switch network to Ethereum.\", {\r\n          transition: bounce,\r\n        });\r\n        return false;\r\n      }\r\n    })\r\n\r\n    if (!selected) {\r\n      toast.error(\"Please select item!\", {\r\n        transition: bounce,\r\n      });\r\n      return false;\r\n    }\r\n    //Sign message...\r\n    console.log(selected);\r\n    const account = localStorage.getItem(\"currentAccount\");\r\n\r\n    await web3.eth.personal\r\n      .sign(web3.utils.sha3(`Sign with id: ${selected}`), account)\r\n      .then(async (e) => {\r\n        console.log(`Item${selected} ETHFloki sent to convert`);\r\n        setProcessing(true);\r\n        await ethToBscRequest(\r\n          account,\r\n          selected,\r\n          selectedURI,\r\n          e,\r\n          web3.utils.sha3(`Sign with id: ${selected}`)\r\n        );\r\n        setProcessing(false);\r\n        clearItem(selected);\r\n      });\r\n  };\r\n  const BscToEth = async () => {\r\n    if (\r\n      !localStorage.getItem(\"isWalletConnected\") ||\r\n      !localStorage.getItem(\"currentAccount\")\r\n    ) {\r\n      toast.warning(\"Please connect your wallet!\", {\r\n        transition: bounce,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    await web3.eth.getChainId().then(id => {\r\n      if(!isBsc(id)) {\r\n        toast.warning(\"Switch network to Binance.\", {\r\n          transition: bounce,\r\n        });\r\n        return false;\r\n      }\r\n    })\r\n\r\n    if (!selected) {\r\n      toast.error(\"Please select item!\", {\r\n        transition: bounce,\r\n      });\r\n      return false;\r\n    }\r\n    //Sign message...\r\n    const account = localStorage.getItem(\"currentAccount\");\r\n\r\n    await web3.eth.personal\r\n      .sign(web3.utils.sha3(`Sign with id: ${selected}`), account)\r\n      .then(async (e) => {\r\n        console.log(`Item${selected} BSCFloki sent to convert`);\r\n        setProcessing(true);\r\n        await bscToEthRequest(\r\n          account,\r\n          selected,\r\n          selectedURI,\r\n          e,\r\n          web3.utils.sha3(`Sign with id: ${selected}`)\r\n        );\r\n        setProcessing(false);\r\n        clearItem(selected);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n      setAccount(accounts[0]);\r\n      localStorage.setItem(\"currentAccount\", accounts[0]);\r\n      toast.warning(\"You changed your account.\", {\r\n        transition: bounce,\r\n      });\r\n      clearItem(selected);\r\n      web3.eth.getChainId().then(id => {\r\n        chainIdBuffer = id;\r\n        if(id == 1 || id == 4)\r\n          getEthNFTs();\r\n        else if(id == 56 || id ==97)\r\n          getBscFNTs();\r\n        else\r\n          toast.warning(\"Switch network to Ethereum or BSC!\", {\r\n            transition: bounce,\r\n          });\r\n      })\r\n    });\r\n\r\n    window.ethereum.on(\"networkChanged\", (networkId) => {\r\n      setCahinId(networkId);\r\n      console.log(networkId);\r\n      localStorage.setItem(\"currentNetwork\", networkId);\r\n      toast.warning(\"You changed network.\", {\r\n        transition: bounce,\r\n      });\r\n      clearItem(selected);\r\n      web3.eth.getChainId().then(id => {\r\n        chainIdBuffer = id;\r\n        if(id == 1 || id == 4)\r\n          getEthNFTs();\r\n        else if(id == 56 || id ==97)\r\n          getBscFNTs();\r\n        else\r\n          toast.warning(\"Switch network to Ethereum or BSC!\", {\r\n            transition: bounce,\r\n          });\r\n      })\r\n    });\r\n\r\n    web3.eth.getChainId().then(id => {\r\n      chainIdBuffer = id;\r\n      if(id == 1 || id == 4)\r\n        getEthNFTs();\r\n      else if(id == 56 || id == 97)\r\n        getBscFNTs();\r\n      else\r\n        toast.warning(\"Switch network to Ethereum or BSC!\", {\r\n          transition: bounce,\r\n        });\r\n    })\r\n  }, []);\r\n  return (\r\n    <div className=\"dashboard-container flex\">\r\n      <div className=\"bridge-dashboard flex col\">\r\n        <div className=\"nft-items flex\">\r\n          <div className=\"inventory-header flex\">\r\n            <div className=\"css-3d-text2 flex\">NFT BRIDGE</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard flex col\">\r\n          <h2 className=\"flex\">Browse your items in inventory.</h2>\r\n          <div className=\"input-area flex\">\r\n            {/* <input\r\n              type=\"number\"\r\n              min={1}\r\n              className=\"theme-input\"\r\n              placeholder=\"Input value here...\"\r\n              value={value}\r\n              onChange={handleChange}\r\n            /> */}\r\n            <Button\r\n              name={openInventory ? 'Close Inventory' : 'Open Inventory'}\r\n              loading={processing}\r\n              onClick={!openInventory ? inventoryOpen : inventoryClose}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"separator flex col\">\r\n          <div className=\"hr\"> </div>\r\n        </div>\r\n        <div className=\"eth-to-bnb flex col\">\r\n          <h2 className=\"flex\">Move your Red Floki from Ethereum to Binance</h2>\r\n          <div className=\"button-area flex\">\r\n            <Button\r\n              name=\"Click here and convert NFT from ETH to BSC\"\r\n              loading={processing}\r\n              onClick={EthToBsc}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"separator flex col\">\r\n          <div className=\"hr\"> </div>\r\n        </div>\r\n        <div className=\"bnb-to-eth flex col\">\r\n          <h2 className=\"flex\">Move your Red Floki from Binance to Ethereum</h2>\r\n          <div className=\"button-area flex\">\r\n            <Button\r\n              name=\"Click here and convert NFT from BSC to ETH\"\r\n              loading={processing}\r\n              onClick={BscToEth}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`inventory-panel ${openInventory ? 'inventory-opened' : 'inventory-closed'}   gradient-border flex col`}>\r\n        <div className=\"inventory-panel-header flex\">\r\n          <img alt=\"ETH INVENTORY\" className=\"eth-inventory\" width=\"100%\" src={eth_inventory}/>\r\n        </div>\r\n        <div className=\"inventory-panel-body flex\">\r\n          {inventoryItems}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BridgeDashboard;\r\n","export default __webpack_public_path__ + \"static/media/logo.5137f794.svg\";","import React from \"react\";\r\nimport logo from \"../img/logo.svg\";\r\n\r\nconst ContactUs = () => {\r\n  return (\r\n    <div className=\"footer flex col\">\r\n      <div className=\"contact-us flex\">\r\n        <div className=\"about-redfloki flex col\">\r\n          <div className=\"flex\">\r\n            <img alt=\"Red Floki\" src={logo} />\r\n          </div>\r\n          <div className=\"flex\">\r\n            <p className=\"sub-text\">\r\n              Red Floki is a Deflationary Token That Charges Tx Fees On\r\n              Everything But Buys. The Fees Charged On All Non-Buy Transactions\r\n              Help Reward And Protect All HOLDRs.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"community flex col\">\r\n          <h3 className=\"h3 red flex\">Community</h3>\r\n          <p className=\"social-link flex\">\r\n            <a\r\n              className=\"flex\"\r\n              href=\"https://twitter.com/Red_Floki\"\r\n              target=\"_blank\"\r\n            >\r\n              Twitter\r\n            </a>\r\n          </p>\r\n          <p className=\"social-link flex\">\r\n            <a\r\n              className=\"flex\"\r\n              href=\"https://www.instagram.com/Red_Floki/\"\r\n              target=\"_blank\"\r\n            >\r\n              Intagram\r\n            </a>\r\n          </p>\r\n          <p className=\"social-link flex\">\r\n            <a className=\"flex\" href=\"https://t.me/Red_Floki\" target=\"_blank\">\r\n              Telegram\r\n            </a>\r\n          </p>\r\n        </div>\r\n        <div className=\"resource flex col\">\r\n          <h3 className=\"h3 red flex\">Recources</h3>\r\n          <p className=\"social-link flex\">\r\n            <a\r\n              className=\"flex\"\r\n              href=\"https://poocoin.app/tokens/0x2a3e1d095f2902c9b6da1bff7813a7b2fc65c3da\"\r\n              target=\"_blank\"\r\n            >\r\n              Chart\r\n            </a>\r\n          </p>\r\n          <p className=\"social-link flex\">\r\n            <a\r\n              className=\"flex\"\r\n              href=\"https://bscscan.com/token/0x2A3E1D095F2902C9B6Da1bFF7813a7B2fc65C3dA\"\r\n              target=\"_blank\"\r\n            >\r\n              Contract\r\n            </a>\r\n          </p>\r\n          <p className=\"social-link flex\">\r\n            <a\r\n              className=\"flex\"\r\n              href=\"https://redfloki.com/Red-Floki-Audit.pdf\"\r\n              target=\"_blank\"\r\n            >\r\n              Security Audit\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-bottom flex\">\r\n      <p>Copyright &copy; 2021 Red Floki. All Rights Reserved.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from \"react\";\r\nimport Button from \"./ThemeButton\";\r\nimport \"../styles/button.css\";\r\nimport floki from \"../img/redfloki.svg\";\r\nimport telegram from \"../img/Telegram.svg\";\r\nimport twitter from \"../img/Twitter.svg\";\r\nimport instagram from \"../img/Instagram.svg\";\r\nimport BridgeDashboard from \"./BridgeDashboard\";\r\nimport ContactUs from \"./ContactUs\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst LandingPage = () => {\r\n  const locate = (url) => {\r\n    window.location.assign(url);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storeScroll = () => {\r\n      let perc =\r\n        (window.scrollY / (document.body.clientHeight - window.innerHeight)) *\r\n        100;\r\n      document.documentElement.setAttribute(\"style\", `--scrollpos: ${perc}`);\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/* <Particle params={particlesConfig} className=\"App-particles__container\" /> */}\r\n      <div className=\"landing-page flex col\">\r\n        <div className=\"main-stack-color bridge-header flex row\">\r\n          <div className=\"bridge-workspace flex col\">\r\n            <div className=\"title-banner flex col\">\r\n              <h1 className=\"h1 flex\">Ethereum - Binance Smart Chain Bridge</h1>\r\n            </div>\r\n            <div className=\"description flex\">\r\n              <p className=\"text flex\">\r\n                Red Floki is a Deflationary Token That Charges Tx Fees On\r\n                Everything But Buys. The Fees Charged On All Non-Buy\r\n                Transactions Help Reward And Protect All HOLDRs.\r\n              </p>\r\n            </div>\r\n            <div className=\"button-area flex\">\r\n              <Button\r\n                name=\"Check Bscscan\"\r\n                onClick={() =>\r\n                  locate(\r\n                    \"https://bscscan.com/token/0x2A3E1D095F2902C9B6Da1bFF7813a7B2fc65C3dA\"\r\n                  )\r\n                }\r\n              />\r\n              <Button\r\n                name=\"Chart\"\r\n                onClick={() =>\r\n                  locate(\r\n                    \"https://poocoin.app/tokens/0x2a3e1d095f2902c9b6da1bff7813a7b2fc65c3da\"\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"social-area flex\">\r\n              <div className=\"telegram flex\">\r\n                <a href=\"https://t.me/Red_Floki\" target=\"_blank\">\r\n                  <img alt=\"Telegram\" src={telegram} />\r\n                </a>\r\n              </div>\r\n              <div className=\"twitter flex\">\r\n                <a href=\"https://twitter.com/Red_Floki\" target=\"_blank\">\r\n                  <img alt=\"Twitter\" src={twitter} />\r\n                </a>\r\n              </div>\r\n              <div className=\"instagram flex\">\r\n                <a href=\"https://t.me/Red_Floki\" target=\"_blank\">\r\n                  <img alt=\"Instagram\" src={instagram} />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"floki-wallpaper flex\">\r\n            <img\r\n              alt=\"Red Floki\"\r\n              className=\"redfloki-main-character\"\r\n              src={floki}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"adfloki flex\">\r\n          <img className=\"adfloki-character\" src={adfloki} />\r\n        </div> */}\r\n      </div>\r\n      <div className=\"dashboard-section flex\">\r\n        <div className=\"landing-page landing-bridge-dashboard flex\">\r\n          <BridgeDashboard />\r\n        </div>\r\n      </div>\r\n      <ContactUs />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"./ThemeButton\";\r\nimport logo from \"../img/logo.svg\";\r\nimport Web3 from \"web3\";\r\nimport Web3Modal from \"web3modal\";\r\nimport Authereum from \"authereum\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { close } from \"./WalletConnect\";\r\nimport getweb3 from \"./WalletConnect\";\r\nconst Navbar = () => {\r\n  const [web3, setWeb3] = useState(null);\r\n  const isWalletConnected = localStorage.getItem(\"isWalletConnected\");\r\n  const currentAccount = localStorage.getItem(\"currentAccount\");\r\n  const [connectState, setConnecState] = useState(\r\n    isWalletConnected && currentAccount\r\n  );\r\n  const connect = async () => {\r\n    if (!connectState && (!currentAccount || currentAccount == undefined)) {\r\n      setWeb3(getweb3);\r\n      setConnecState(true);\r\n    } else {\r\n      close();\r\n      setConnecState(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"header flex\">\r\n      <div className=\"header-content flex\">\r\n        <div className=\"logo-container flex\">\r\n          <img alt=\"Red Floki\" className=\"logo flex\" src={logo} />\r\n        </div>\r\n        <div className=\"button-area flex\">\r\n          <Button\r\n            name={connectState ? \"Disconnect\" : \"Connect Wallet\"}\r\n            onClick={connect}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { ExternalProvider, JsonRpcFetchFunc } from \"@ethersproject/providers\";\r\nimport { Web3Provider } from \"@ethersproject/providers\";\r\n\r\nconst getLibrary = (provider) => {\r\n    return new Web3Provider(provider);\r\n}\r\n\r\nexport default getLibrary;","import { Connectors } from \"web3-react\";\r\n\r\nconst { InjectedConnector, NetworkOnlyConnector } = Connectors;\r\n\r\nconst MetaMask = new InjectedConnector({ supportedNetworks: [1, 4, 56, 97] });\r\n\r\nconst Infura = new NetworkOnlyConnector({\r\n    providerURL: \"https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\",\r\n});\r\n\r\nconst connectors = { MetaMask, Infura };\r\nexport default connectors;","import './App.css';\nimport './Responsive.App.css';\nimport LandingPage from './components/LandingPage';\nimport Navbar from \"./components/Navbar\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { ToastContainer, cssTransition } from 'react-toastify';\nimport getLibrary from './getLibrary';\nimport connectors from './components/Connectors';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst App = () => {\n\n  const bounce = cssTransition({\n    enter: \"animate__animated animate__bounceIn\",\n    exit: \"animate__animated animate__bounceOut\"\n  });\n\n  return (\n    <Web3ReactProvider connectors={connectors} getLibrary={getLibrary} libraryName={'ethers.js' | 'web3.js' | null}>\n      <div className=\"App flex col\">\n        <Navbar />\n        <LandingPage />\n      </div>\n      <ToastContainer transition={bounce} />\n    </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}